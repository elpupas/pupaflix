{
    "openapi": "3.0.0",
    "info": {
        "title": "ITA Profiles page API documentation",
        "description": "Documentation needed for the API Rest for the ITA Profiles page to IT Academy. Some useful links below:\r\n *     [ITA Profiles Backend](https://github.com/IT-Academy-BCN/ita-profiles-backend)\r\n *     [ITA Profiles Frontend](https://github.com/IT-Academy-BCN/ita-profiles-frontend)\r\n *     To use the endpoints, prefix them with '**api/v1**'. For example: '**POST: https://itaperfils.eurecatacademy.org/api/v1/students**'.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Log in a user with their email and password.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "auth_token": {
                                            "type": "string",
                                            "example": "eyJ0e..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Log out the authenticated user.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user.",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Spain"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Barcelona"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "carrer lleo"
                                    },
                                    "floor": {
                                        "type": "string",
                                        "example": "4"
                                    },
                                    "door": {
                                        "type": "string",
                                        "example": "5"
                                    },
                                    "zipcode": {
                                        "type": "string",
                                        "example": "08001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully. No token is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "surname": [
                                                    "The surname field is required."
                                                ],
                                                "email": [
                                                    "The email must be unique."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnnotationsUser": {
                "title": "User",
                "description": "User Model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "User's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "format": "password",
                        "example": "********"
                    },
                    "created_at": {
                        "description": "User's creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User's update date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "email_verified_at": {
                        "description": "User's email verification date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    }
}